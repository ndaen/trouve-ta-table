services:
  postgres:
    image: postgres:16-alpine
    container_name: ttt-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-aldo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Abcd1234*}
      POSTGRES_DB: ${POSTGRES_DB:-ttt-db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ttt-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ttt-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ttt-network
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: packages/ttt-api/Dockerfile
    container_name: ttt-api
    ports:
      - "3333:3333"
    environment:
      TZ: UTC+1
      NODE_ENV: production
      PORT: 3333
      HOST: 0.0.0.0
      LOG_LEVEL: info
      APP_KEY: ${APP_KEY}
      SESSION_DRIVER: cookie
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DB_CONNECTION: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER:-aldo}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-Abcd1234*}
      DB_DATABASE: ${POSTGRES_DB:-ttt-db}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    depends_on:
      - postgres
      - redis
    networks:
      - ttt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build:
      context: .
      dockerfile: packages/ttt-web/Dockerfile
    container_name: ttt-web
    ports:
      - "80:80"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3333/api}
    depends_on:
      - api
    networks:
      - ttt-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  ttt-network:
    driver: bridge